{
  "id": "02673c1f-5fb3-4478-8075-b48051e4210b",
  "prevId": "be21fdaa-f173-4e82-b6f8-9ca848f7bdd2",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.bakery_orders": {
      "name": "bakery_orders",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "item_id": {
          "name": "item_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "temp_tot_order_qty": {
          "name": "temp_tot_order_qty",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "temp_tot_made": {
          "name": "temp_tot_made",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "units": {
          "name": "units",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "is_checked_off": {
          "name": "is_checked_off",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "group_order_no": {
          "name": "group_order_no",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "bakery_comments": {
          "name": "bakery_comments",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "bakery_orders_item_id_items_id_fk": {
          "name": "bakery_orders_item_id_items_id_fk",
          "tableFrom": "bakery_orders",
          "tableTo": "items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable inserting bakery orders for auth users only": {
          "name": "Enable inserting bakery orders for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating bakery orders for auth users only": {
          "name": "Enable updating bakery orders for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading bakery orders for auth users only": {
          "name": "Enable reading bakery orders for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable deleting bakery orders for auth users only": {
          "name": "Enable deleting bakery orders for auth users only",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {
        "positive_temp_tot_order_qty": {
          "name": "positive_temp_tot_order_qty",
          "value": "\"bakery_orders\".\"temp_tot_order_qty\" >= 0"
        },
        "positive_temp_tot_made": {
          "name": "positive_temp_tot_made",
          "value": "\"bakery_orders\".\"temp_tot_made\" >= 0"
        },
        "positive_group_order_no": {
          "name": "positive_group_order_no",
          "value": "\"bakery_orders\".\"group_order_no\" >= 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.history": {
      "name": "history",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "table_name": {
          "name": "table_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "record_id": {
          "name": "record_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "field_name": {
          "name": "field_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "old_value": {
          "name": "old_value",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "new_value": {
          "name": "new_value",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "changed_at": {
          "name": "changed_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable inserting for auth users only": {
          "name": "Enable inserting for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating for auth users only": {
          "name": "Enable updating for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading for auth users only": {
          "name": "Enable reading for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable deleting for auth users only": {
          "name": "Enable deleting for auth users only",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.items": {
      "name": "items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "vendor_id": {
          "name": "vendor_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "units": {
          "name": "units",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "list_price": {
          "name": "list_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "0.00"
        },
        "store_categ": {
          "name": "store_categ",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "invoice_categ": {
          "name": "invoice_categ",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true,
          "default": "'NONE'"
        },
        "main_categ": {
          "name": "main_categ",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "sub_categ": {
          "name": "sub_categ",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "cron_categ": {
          "name": "cron_categ",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false,
          "default": "'NONE'"
        },
        "is_waste_tracked": {
          "name": "is_waste_tracked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "item_description": {
          "name": "item_description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "picture": {
          "name": "picture",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "items_vendor_id_vendors_id_fk": {
          "name": "items_vendor_id_vendors_id_fk",
          "tableFrom": "items",
          "tableTo": "vendors",
          "columnsFrom": [
            "vendor_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "items_name_unique": {
          "name": "items_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {
        "Enable update for authenticated users only": {
          "name": "Enable update for authenticated users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable Items read for authenticated users only": {
          "name": "Enable Items read for authenticated users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable inserting items for auth users only": {
          "name": "Enable inserting items for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        }
      },
      "checkConstraints": {
        "invoice_categ_check": {
          "name": "invoice_categ_check",
          "value": "\"items\".\"invoice_categ\" IN ('SANDWICH', 'PASTRY', 'FOOD', 'COOLER&EXTRAS', 'BEVERAGE', 'MISC/BATHROOM', 'CHOCOLATE&TEA', 'COFFEE', 'NONE')"
        },
        "positive_list_price": {
          "name": "positive_list_price",
          "value": "\"items\".\"list_price\" >= 0"
        },
        "store_category_check": {
          "name": "store_category_check",
          "value": "\"items\".\"store_categ\" IN ('FRONT', 'STOCKROOM', 'FRIDGE', 'GENERAL', 'BEANS&TEA', 'PASTRY', 'NONE')"
        },
        "cron_category_check": {
          "name": "cron_category_check",
          "value": "\"items\".\"cron_categ\" IN ('PASTRY', 'MILK', 'BREAD', 'RETAILBEANS', 'MEATS', 'NONE')"
        }
      },
      "isRLSEnabled": false
    },
    "public.order_item_schedules": {
      "name": "order_item_schedules",
      "schema": "",
      "columns": {
        "item_id": {
          "name": "item_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "schedule_id": {
          "name": "schedule_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "order_item_schedules_item_id_items_id_fk": {
          "name": "order_item_schedules_item_id_items_id_fk",
          "tableFrom": "order_item_schedules",
          "tableTo": "items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "order_item_schedules_schedule_id_schedules_id_fk": {
          "name": "order_item_schedules_schedule_id_schedules_id_fk",
          "tableFrom": "order_item_schedules",
          "tableTo": "schedules",
          "columnsFrom": [
            "schedule_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "order_item_schedules_item_id_schedule_id_pk": {
          "name": "order_item_schedules_item_id_schedule_id_pk",
          "columns": [
            "item_id",
            "schedule_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "Enable inserting for auth users only": {
          "name": "Enable inserting for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating for auth users only": {
          "name": "Enable updating for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading for auth users only": {
          "name": "Enable reading for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable deleting for auth users only": {
          "name": "Enable deleting for auth users only",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.orders": {
      "name": "orders",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "item_id": {
          "name": "item_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "tot_qty_store": {
          "name": "tot_qty_store",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "tot_qty_vendor": {
          "name": "tot_qty_vendor",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "tot_qty_delivered": {
          "name": "tot_qty_delivered",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "vendor_id": {
          "name": "vendor_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "units": {
          "name": "units",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "due_date": {
          "name": "due_date",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "list_price": {
          "name": "list_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "final_price": {
          "name": "final_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "adj_price": {
          "name": "adj_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "group_order_no": {
          "name": "group_order_no",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "ordered_via": {
          "name": "ordered_via",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false,
          "default": "'MANUALLY'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "orders_item_id_items_id_fk": {
          "name": "orders_item_id_items_id_fk",
          "tableFrom": "orders",
          "tableTo": "items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "orders_vendor_id_vendors_id_fk": {
          "name": "orders_vendor_id_vendors_id_fk",
          "tableFrom": "orders",
          "tableTo": "vendors",
          "columnsFrom": [
            "vendor_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable inserting orders for auth users only": {
          "name": "Enable inserting orders for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating orders for auth users only": {
          "name": "Enable updating orders for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading orders for auth users only": {
          "name": "Enable reading orders for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable deleting orders for auth users only": {
          "name": "Enable deleting orders for auth users only",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {
        "tot_qty_store_check": {
          "name": "tot_qty_store_check",
          "value": "\"orders\".\"tot_qty_store\" >= 0"
        },
        "tot_qty_vendor_check": {
          "name": "tot_qty_vendor_check",
          "value": "\"orders\".\"tot_qty_vendor\" >= 0"
        },
        "tot_qty_delivered_check": {
          "name": "tot_qty_delivered_check",
          "value": "\"orders\".\"tot_qty_delivered\" >= 0"
        },
        "positive_list_price": {
          "name": "positive_list_price",
          "value": "\"orders\".\"list_price\" >= 0"
        },
        "positive_final_price": {
          "name": "positive_final_price",
          "value": "\"orders\".\"final_price\" >= 0"
        },
        "positive_adj_price": {
          "name": "positive_adj_price",
          "value": "\"orders\".\"adj_price\" >= 0"
        },
        "check_ordered_via": {
          "name": "check_ordered_via",
          "value": "\"orders\".\"ordered_via\" IN ('MANUALLY', 'EMAIL', 'WEB', 'API')"
        },
        "positive_group_order_no": {
          "name": "positive_group_order_no",
          "value": "\"orders\".\"group_order_no\" >= 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.pars": {
      "name": "pars",
      "schema": "",
      "columns": {
        "item_id": {
          "name": "item_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "store_id": {
          "name": "store_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "monday": {
          "name": "monday",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "tuesday": {
          "name": "tuesday",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "wednesday": {
          "name": "wednesday",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "thursday": {
          "name": "thursday",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "friday": {
          "name": "friday",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "saturday": {
          "name": "saturday",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "sunday": {
          "name": "sunday",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "weekly": {
          "name": "weekly",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "pars_item_id_items_id_fk": {
          "name": "pars_item_id_items_id_fk",
          "tableFrom": "pars",
          "tableTo": "items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "pars_store_id_stores_id_fk": {
          "name": "pars_store_id_stores_id_fk",
          "tableFrom": "pars",
          "tableTo": "stores",
          "columnsFrom": [
            "store_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "pars_item_id_store_id_pk": {
          "name": "pars_item_id_store_id_pk",
          "columns": [
            "item_id",
            "store_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "Enable inserting for auth users only": {
          "name": "Enable inserting for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating for auth users only": {
          "name": "Enable updating for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading for auth users only": {
          "name": "Enable reading for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {
        "positive_monday": {
          "name": "positive_monday",
          "value": "\"pars\".\"monday\" >= 0"
        },
        "positive_tuesday": {
          "name": "positive_tuesday",
          "value": "\"pars\".\"tuesday\" >= 0"
        },
        "positive_wednesday": {
          "name": "positive_wednesday",
          "value": "\"pars\".\"wednesday\" >= 0"
        },
        "positive_thursday": {
          "name": "positive_thursday",
          "value": "\"pars\".\"thursday\" >= 0"
        },
        "positive_friday": {
          "name": "positive_friday",
          "value": "\"pars\".\"friday\" >= 0"
        },
        "positive_saturday": {
          "name": "positive_saturday",
          "value": "\"pars\".\"saturday\" >= 0"
        },
        "positive_sunday": {
          "name": "positive_sunday",
          "value": "\"pars\".\"sunday\" >= 0"
        },
        "positive_weekly": {
          "name": "positive_weekly",
          "value": "\"pars\".\"weekly\" >= 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.schedules": {
      "name": "schedules",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "exec_time": {
          "name": "exec_time",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "days_of_week": {
          "name": "days_of_week",
          "type": "integer[]",
          "primaryKey": false,
          "notNull": true
        },
        "last_run": {
          "name": "last_run",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "schedules_name_unique": {
          "name": "schedules_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {
        "Enable inserting for auth users only": {
          "name": "Enable inserting for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating for auth users only": {
          "name": "Enable updating for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading for auth users only": {
          "name": "Enable reading for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.stock": {
      "name": "stock",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "item_id": {
          "name": "item_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "store_id": {
          "name": "store_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "count": {
          "name": "count",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "units": {
          "name": "units",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "submitted_at": {
          "name": "submitted_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "stock_item_id_items_id_fk": {
          "name": "stock_item_id_items_id_fk",
          "tableFrom": "stock",
          "tableTo": "items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "stock_store_id_stores_id_fk": {
          "name": "stock_store_id_stores_id_fk",
          "tableFrom": "stock",
          "tableTo": "stores",
          "columnsFrom": [
            "store_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable inserting stock for auth users only": {
          "name": "Enable inserting stock for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating stock for auth users only": {
          "name": "Enable updating stock for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading stock for auth users only": {
          "name": "Enable reading stock for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable deleting stock for auth users only": {
          "name": "Enable deleting stock for auth users only",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {
        "positive_count": {
          "name": "positive_count",
          "value": "\"stock\".\"count\" >= 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.stock_item_schedules": {
      "name": "stock_item_schedules",
      "schema": "",
      "columns": {
        "item_id": {
          "name": "item_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "schedule_id": {
          "name": "schedule_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "stock_item_schedules_item_id_items_id_fk": {
          "name": "stock_item_schedules_item_id_items_id_fk",
          "tableFrom": "stock_item_schedules",
          "tableTo": "items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "stock_item_schedules_schedule_id_schedules_id_fk": {
          "name": "stock_item_schedules_schedule_id_schedules_id_fk",
          "tableFrom": "stock_item_schedules",
          "tableTo": "schedules",
          "columnsFrom": [
            "schedule_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "stock_item_schedules_item_id_schedule_id_pk": {
          "name": "stock_item_schedules_item_id_schedule_id_pk",
          "columns": [
            "item_id",
            "schedule_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "Enable inserting for auth users only": {
          "name": "Enable inserting for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating for auth users only": {
          "name": "Enable updating for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading for auth users only": {
          "name": "Enable reading for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable deleting for auth users only": {
          "name": "Enable deleting for auth users only",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.store_bakery_orders": {
      "name": "store_bakery_orders",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "order_id": {
          "name": "order_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "store_id": {
          "name": "store_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "order_qty": {
          "name": "order_qty",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "made_qty": {
          "name": "made_qty",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "is_par_submit": {
          "name": "is_par_submit",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "comments": {
          "name": "comments",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "submitted_at": {
          "name": "submitted_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "bakery_completed_at": {
          "name": "bakery_completed_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "store_bakery_orders_order_id_bakery_orders_id_fk": {
          "name": "store_bakery_orders_order_id_bakery_orders_id_fk",
          "tableFrom": "store_bakery_orders",
          "tableTo": "bakery_orders",
          "columnsFrom": [
            "order_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "store_bakery_orders_store_id_stores_id_fk": {
          "name": "store_bakery_orders_store_id_stores_id_fk",
          "tableFrom": "store_bakery_orders",
          "tableTo": "stores",
          "columnsFrom": [
            "store_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable inserting bakery orders for auth users only": {
          "name": "Enable inserting bakery orders for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating bakery orders for auth users only": {
          "name": "Enable updating bakery orders for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading bakery orders for auth users only": {
          "name": "Enable reading bakery orders for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable deleting bakery orders for auth users only": {
          "name": "Enable deleting bakery orders for auth users only",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {
        "positive_order_qty": {
          "name": "positive_order_qty",
          "value": "\"store_bakery_orders\".\"order_qty\" >= 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.store_orders": {
      "name": "store_orders",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "order_id": {
          "name": "order_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "store_id": {
          "name": "store_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "qty": {
          "name": "qty",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "is_par_submit": {
          "name": "is_par_submit",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_priority_delivery": {
          "name": "is_priority_delivery",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "comments": {
          "name": "comments",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "submitted_at": {
          "name": "submitted_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "store_orders_order_id_orders_id_fk": {
          "name": "store_orders_order_id_orders_id_fk",
          "tableFrom": "store_orders",
          "tableTo": "orders",
          "columnsFrom": [
            "order_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "store_orders_store_id_stores_id_fk": {
          "name": "store_orders_store_id_stores_id_fk",
          "tableFrom": "store_orders",
          "tableTo": "stores",
          "columnsFrom": [
            "store_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable inserting store orders for auth users only": {
          "name": "Enable inserting store orders for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating store orders for auth users only": {
          "name": "Enable updating store orders for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading store orders for auth users only": {
          "name": "Enable reading store orders for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable deleting store orders for auth users only": {
          "name": "Enable deleting store orders for auth users only",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable inserting orders for auth users only": {
          "name": "Enable inserting orders for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating orders for auth users only": {
          "name": "Enable updating orders for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading orders for auth users only": {
          "name": "Enable reading orders for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable deleting orders for auth users only": {
          "name": "Enable deleting orders for auth users only",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {
        "positive_qty": {
          "name": "positive_qty",
          "value": "\"store_orders\".\"qty\" >= 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.stores": {
      "name": "stores",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "weekly_budget": {
          "name": "weekly_budget",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "0.00"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "logo": {
          "name": "logo",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "stores_name_unique": {
          "name": "stores_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {
        "Enable inserting stores for auth users only": {
          "name": "Enable inserting stores for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating stores for auth users only": {
          "name": "Enable updating stores for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading stores for auth users only": {
          "name": "Enable reading stores for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {
        "positive_weekly_budget": {
          "name": "positive_weekly_budget",
          "value": "\"stores\".\"weekly_budget\" >= 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.vendor_items": {
      "name": "vendor_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "item_id": {
          "name": "item_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "vendor_id": {
          "name": "vendor_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "alt_name": {
          "name": "alt_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "list_price": {
          "name": "list_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "barcode": {
          "name": "barcode",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "item_code": {
          "name": "item_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "item_brand": {
          "name": "item_brand",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "units": {
          "name": "units",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "is_primary": {
          "name": "is_primary",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "item_description": {
          "name": "item_description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "vendor_item_unique_idx": {
          "name": "vendor_item_unique_idx",
          "columns": [
            {
              "expression": "vendor_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "item_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "alt_name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "single_primary_vendor_item": {
          "name": "single_primary_vendor_item",
          "columns": [
            {
              "expression": "vendor_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "item_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "is_primary",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "vendor_items_item_id_items_id_fk": {
          "name": "vendor_items_item_id_items_id_fk",
          "tableFrom": "vendor_items",
          "tableTo": "items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "vendor_items_vendor_id_vendors_id_fk": {
          "name": "vendor_items_vendor_id_vendors_id_fk",
          "tableFrom": "vendor_items",
          "tableTo": "vendors",
          "columnsFrom": [
            "vendor_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable inserting for auth users only": {
          "name": "Enable inserting for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating for auth users only": {
          "name": "Enable updating for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading for auth users only": {
          "name": "Enable reading for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable deleting for auth users only": {
          "name": "Enable deleting for auth users only",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {
        "positive_list_price": {
          "name": "positive_list_price",
          "value": "\"vendor_items\".\"list_price\" >= 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.vendor_price_history": {
      "name": "vendor_price_history",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "vendor_id": {
          "name": "vendor_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "item_id": {
          "name": "item_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "list_price": {
          "name": "list_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "vendor_price_history_vendor_id_vendors_id_fk": {
          "name": "vendor_price_history_vendor_id_vendors_id_fk",
          "tableFrom": "vendor_price_history",
          "tableTo": "vendors",
          "columnsFrom": [
            "vendor_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "vendor_price_history_item_id_items_id_fk": {
          "name": "vendor_price_history_item_id_items_id_fk",
          "tableFrom": "vendor_price_history",
          "tableTo": "items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable inserting for auth users only": {
          "name": "Enable inserting for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating for auth users only": {
          "name": "Enable updating for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading for auth users only": {
          "name": "Enable reading for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {
        "positive_list_price": {
          "name": "positive_list_price",
          "value": "\"vendor_price_history\".\"list_price\" >= 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.vendor_split": {
      "name": "vendor_split",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "order_id": {
          "name": "order_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "vendor_id": {
          "name": "vendor_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "qty": {
          "name": "qty",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "units": {
          "name": "units",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "total_spent": {
          "name": "total_spent",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "vendor_split_order_id_orders_id_fk": {
          "name": "vendor_split_order_id_orders_id_fk",
          "tableFrom": "vendor_split",
          "tableTo": "orders",
          "columnsFrom": [
            "order_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "vendor_split_vendor_id_vendors_id_fk": {
          "name": "vendor_split_vendor_id_vendors_id_fk",
          "tableFrom": "vendor_split",
          "tableTo": "vendors",
          "columnsFrom": [
            "vendor_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable inserting for auth users only": {
          "name": "Enable inserting for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating for auth users only": {
          "name": "Enable updating for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading for auth users only": {
          "name": "Enable reading for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable deleting deleting for auth users only": {
          "name": "Enable deleting deleting for auth users only",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {
        "positive_qty": {
          "name": "positive_qty",
          "value": "\"vendor_split\".\"qty\" >= 0"
        },
        "positive_total_spent": {
          "name": "positive_total_spent",
          "value": "\"vendor_split\".\"total_spent\" >= 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.vendors": {
      "name": "vendors",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "contact_name": {
          "name": "contact_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "website": {
          "name": "website",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "logo": {
          "name": "logo",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "is_exclusive_supplier": {
          "name": "is_exclusive_supplier",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "agreement_start_date": {
          "name": "agreement_start_date",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "agreement_end_date": {
          "name": "agreement_end_date",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "comments": {
          "name": "comments",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "vendors_name_unique": {
          "name": "vendors_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {
        "Enable update for authenticated users only": {
          "name": "Enable update for authenticated users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable read for authenticated users only": {
          "name": "Enable read for authenticated users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable inserting vendors for auth users only": {
          "name": "Enable inserting vendors for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.week_close": {
      "name": "week_close",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "item_id": {
          "name": "item_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "store_id": {
          "name": "store_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "count": {
          "name": "count",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "closed_count": {
          "name": "closed_count",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "sealed_count": {
          "name": "sealed_count",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "open_items_weight": {
          "name": "open_items_weight",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "expired_count": {
          "name": "expired_count",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "unexpired_count": {
          "name": "unexpired_count",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "reused_count": {
          "name": "reused_count",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "submitted_at": {
          "name": "submitted_at",
          "type": "timestamp (3) with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "week_close_item_id_items_id_fk": {
          "name": "week_close_item_id_items_id_fk",
          "tableFrom": "week_close",
          "tableTo": "items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "week_close_store_id_stores_id_fk": {
          "name": "week_close_store_id_stores_id_fk",
          "tableFrom": "week_close",
          "tableTo": "stores",
          "columnsFrom": [
            "store_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable inserting records for auth users only": {
          "name": "Enable inserting records for auth users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Enable updating records for auth users only": {
          "name": "Enable updating records for auth users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "true",
          "withCheck": "true"
        },
        "Enable reading records for auth users only": {
          "name": "Enable reading records for auth users only",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable deleting records for auth users only": {
          "name": "Enable deleting records for auth users only",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {
        "positive_count": {
          "name": "positive_count",
          "value": "\"week_close\".\"count\" >= 0"
        },
        "positive_closed_count": {
          "name": "positive_closed_count",
          "value": "\"week_close\".\"closed_count\" >= 0"
        },
        "positive_sealed_count": {
          "name": "positive_sealed_count",
          "value": "\"week_close\".\"sealed_count\" >= 0"
        },
        "open_items_weight_check": {
          "name": "open_items_weight_check",
          "value": "\"week_close\".\"open_items_weight\" >= 0"
        },
        "expired_count_check": {
          "name": "expired_count_check",
          "value": "\"week_close\".\"expired_count\" >= 0"
        },
        "unexpired_count_check": {
          "name": "unexpired_count_check",
          "value": "\"week_close\".\"unexpired_count\" >= 0"
        },
        "reused_count_check": {
          "name": "reused_count_check",
          "value": "\"week_close\".\"reused_count\" >= 0"
        }
      },
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}